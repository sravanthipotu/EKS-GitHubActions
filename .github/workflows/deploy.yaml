name: Build, Push to ECR, and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 3. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Build and push Docker image
      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: 983911888147.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: eksrepo
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 5. Configure kubectl for EKS
      - name: Configure kubectl
        uses: aws-actions/eks-kubectl@v2
        with:
          cluster-name: ekscluster      # <-- Replace with your EKS cluster name
          region: ap-south-1

      # 6. Deploy to EKS
      - name: Deploy to EKS
        env:
          ECR_REGISTRY: 983911888147.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: eksrepo
          IMAGE_TAG: latest
        run: |
          # Update deployment.yaml with latest image
          sed -i "s|image: .*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/deployment.yaml
          # Apply deployment and service
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
